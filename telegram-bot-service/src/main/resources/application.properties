spring.output.ansi.enabled=ALWAYS
server.port=8082

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

spring.application.name=telegram-bot-service
spring.kafka.bootstrap-servers=kafka:29092

# Telegram bot credentials
telegram.bot.token=7794561008:AAE549yoHXCx66QpyDG2Qf0Yh1xZYECwkrA
telegram.bot.username=FisherVehicleParkBot

# Kafka consumer config
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=telegram-bot-group
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer


#spring.kafka.consumer.properties.spring.json.value.default.type=ru.fisher.dto.NotificationEvent

# ????? ??? ??
app.kafka.topic=manager-notifications

# Config DataBase (Data source)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
spring.datasource.username=fisher48
spring.datasource.password=12345

kafka.topic.notifications=telegram-notifications

# Consumer
spring.kafka.consumer.properties.spring.json.trusted.packages=*










spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

kafka.topic.telegram-notifications=telegram-notifications
