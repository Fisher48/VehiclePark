spring.output.ansi.enabled=ALWAYS
server.port=8083

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

spring.application.name=notification-service
spring.kafka.bootstrap-servers=kafka:29092

# Config DataBase (Data source)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/test_db
spring.datasource.username=fisher48
spring.datasource.password=12345

# Kafka consumer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=notification-service-group
#spring.kafka.consumer.properties.spring.json.value.default.type=ru.fisher.kafka.NotificationEvent

#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Topic name (?????? ????????? ? topic ?? vehiclepark-core)
app.kafka.topic=manager-notifications





spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

kafka.topic.notifications=notifications
kafka.topic.telegram-notifications=telegram-notifications

vehiclepark-core.url=http://localhost:8888