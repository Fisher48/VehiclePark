--
-- PostgreSQL database dump
--

-- Dumped from database version 16.4 (Ubuntu 16.4-0ubuntu0.24.04.1)
-- Dumped by pg_dump version 16.4 (Ubuntu 16.4-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: autopark; Type: SCHEMA; Schema: -; Owner: fisher48
--

CREATE SCHEMA IF NOT EXISTS autopark;


ALTER SCHEMA autopark OWNER TO fisher48;

-- Установка поиска в схеме autopark

SET search_path TO autopark;

--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA autopark;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry and geography spatial types and functions';

--
-- Name: pgrouting; Type: EXTENSION; Schema: -; Owner: -
--

-- CREATE EXTENSION IF NOT EXISTS pgrouting WITH SCHEMA autopark;


--
-- Name: EXTENSION pgrouting; Type: COMMENT; Schema: -; Owner: 
--

-- COMMENT ON EXTENSION pgrouting IS 'pgRouting Extension';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: brand; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.brand (
    id integer NOT NULL,
    brand_name character varying(255) NOT NULL,
    type character varying(255) NOT NULL,
    fuel_tank integer NOT NULL,
    load_capacity integer NOT NULL,
    number_of_seats integer NOT NULL
);


ALTER TABLE autopark.brand OWNER TO fisher48;

--
-- Name: brand_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.brand ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.brand_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: driver; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.driver (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    salary double precision NOT NULL,
    active boolean DEFAULT false,
    enterprise_id bigint,
    active_vehicle_id bigint
);


ALTER TABLE autopark.driver OWNER TO fisher48;

--
-- Name: driver_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

CREATE SEQUENCE autopark.driver_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE autopark.driver_id_seq OWNER TO fisher48;

--
-- Name: driver_id_seq; Type: SEQUENCE OWNED BY; Schema: autopark; Owner: fisher48
--

ALTER SEQUENCE autopark.driver_id_seq OWNED BY autopark.driver.id;


--
-- Name: driver_vehicle; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.driver_vehicle (
    driver_id bigint NOT NULL,
    vehicle_id bigint NOT NULL
);


ALTER TABLE autopark.driver_vehicle OWNER TO fisher48;

--
-- Name: enterprise; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.enterprise (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    city character varying(255) NOT NULL,
    timezone character varying(50) DEFAULT 'UTC'::character varying
);


ALTER TABLE autopark.enterprise OWNER TO fisher48;

--
-- Name: enterprise_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

CREATE SEQUENCE autopark.enterprise_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE autopark.enterprise_id_seq OWNER TO fisher48;

--
-- Name: enterprise_id_seq; Type: SEQUENCE OWNED BY; Schema: autopark; Owner: fisher48
--

ALTER SEQUENCE autopark.enterprise_id_seq OWNED BY autopark.enterprise.id;


--
-- Name: enterprise_manager; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.enterprise_manager (
    enterprise_id bigint NOT NULL,
    manager_id bigint NOT NULL
);


ALTER TABLE autopark.enterprise_manager OWNER TO fisher48;

--
-- Name: gps_data; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.gps_data (
    id integer NOT NULL,
    vehicle_id integer,
    coordinates geometry(Point,4326),
    "timestamp" timestamp with time zone DEFAULT now() NOT NULL,
    trip_id bigint
);


ALTER TABLE autopark.gps_data OWNER TO fisher48;

--
-- Name: gps_data_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.gps_data ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.gps_data_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: manager; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.manager (
    id bigint NOT NULL,
    username character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    role character varying(50)
);


ALTER TABLE autopark.manager OWNER TO fisher48;

--
-- Name: manager_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.manager ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.manager_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: person; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.person (
    id integer NOT NULL,
    username character varying(50) NOT NULL,
    password character varying NOT NULL,
    role character varying(100) NOT NULL
);


ALTER TABLE autopark.person OWNER TO fisher48;

--
-- Name: person_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.person ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: report; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.report (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    period character varying(50) NOT NULL,
    start_date timestamp without time zone NOT NULL,
    end_date timestamp without time zone NOT NULL
);


ALTER TABLE autopark.report OWNER TO fisher48;

--
-- Name: report_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

CREATE SEQUENCE autopark.report_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE autopark.report_id_seq OWNER TO fisher48;

--
-- Name: report_id_seq; Type: SEQUENCE OWNED BY; Schema: autopark; Owner: fisher48
--

ALTER SEQUENCE autopark.report_id_seq OWNED BY autopark.report.id;


--
-- Name: trip; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.trip (
    id integer NOT NULL,
    vehicle_id bigint NOT NULL,
    start_time timestamp without time zone NOT NULL,
    end_time timestamp without time zone NOT NULL,
    duration interval GENERATED ALWAYS AS ((end_time - start_time)) STORED,
    start_gps_data_id bigint,
    end_gps_data_id bigint,
    mileage double precision DEFAULT 0 NOT NULL,
    CONSTRAINT chk_valid_times CHECK ((end_time > start_time))
);


ALTER TABLE autopark.trip OWNER TO fisher48;

--
-- Name: trip_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.trip ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.trip_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: vehicle; Type: TABLE; Schema: autopark; Owner: fisher48
--

CREATE TABLE autopark.vehicle (
    id bigint NOT NULL,
    number character varying(255) NOT NULL,
    price integer NOT NULL,
    mileage integer,
    year_of_car_production integer NOT NULL,
    brand_id integer,
    enterprise_id bigint,
    active_driver_id bigint,
    active_vehicle bigint,
    purchase_time timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE autopark.vehicle OWNER TO fisher48;

--
-- Name: vehicle_id_seq; Type: SEQUENCE; Schema: autopark; Owner: fisher48
--

ALTER TABLE autopark.vehicle ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME autopark.vehicle_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: driver id; Type: DEFAULT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver ALTER COLUMN id SET DEFAULT nextval('autopark.driver_id_seq'::regclass);


--
-- Name: enterprise id; Type: DEFAULT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.enterprise ALTER COLUMN id SET DEFAULT nextval('autopark.enterprise_id_seq'::regclass);


--
-- Name: report id; Type: DEFAULT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.report ALTER COLUMN id SET DEFAULT nextval('autopark.report_id_seq'::regclass);


--
-- Name: brand brand_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.brand
    ADD CONSTRAINT brand_pkey PRIMARY KEY (id);


--
-- Name: driver driver_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver
    ADD CONSTRAINT driver_pkey PRIMARY KEY (id);


--
-- Name: driver_vehicle driver_vehicle_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver_vehicle
    ADD CONSTRAINT driver_vehicle_pkey PRIMARY KEY (driver_id, vehicle_id);


--
-- Name: enterprise_manager enterprise_manager_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.enterprise_manager
    ADD CONSTRAINT enterprise_manager_pkey PRIMARY KEY (enterprise_id, manager_id);


--
-- Name: enterprise enterprise_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.enterprise
    ADD CONSTRAINT enterprise_pkey PRIMARY KEY (id);

ALTER TABLE autopark.enterprise CLUSTER ON enterprise_pkey;


--
-- Name: gps_data gps_data_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.gps_data
    ADD CONSTRAINT gps_data_pkey PRIMARY KEY (id);


--
-- Name: manager manager_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.manager
    ADD CONSTRAINT manager_pkey PRIMARY KEY (id);


--
-- Name: person person_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


--
-- Name: report report_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.report
    ADD CONSTRAINT report_pkey PRIMARY KEY (id);


--
-- Name: trip trip_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.trip
    ADD CONSTRAINT trip_pkey PRIMARY KEY (id);


--
-- Name: driver ukfphtg8yyxautb52ownj8qi3b5; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver
    ADD CONSTRAINT ukfphtg8yyxautb52ownj8qi3b5 UNIQUE (active_vehicle_id);


--
-- Name: vehicle ukps9bb52gpkk45plygmls1addf; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT ukps9bb52gpkk45plygmls1addf UNIQUE (active_vehicle);


--
-- Name: vehicle vehicle_number_key; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT vehicle_number_key UNIQUE (number);


--
-- Name: vehicle vehicle_pkey; Type: CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT vehicle_pkey PRIMARY KEY (id);

ALTER TABLE autopark.vehicle CLUSTER ON vehicle_pkey;


--
-- Name: idx_gps_data_id; Type: INDEX; Schema: autopark; Owner: fisher48
--

CREATE INDEX idx_gps_data_id ON autopark.gps_data USING btree (id);

ALTER TABLE autopark.gps_data CLUSTER ON idx_gps_data_id;


--
-- Name: driver driver_enterprise_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver
    ADD CONSTRAINT driver_enterprise_id_fkey FOREIGN KEY (enterprise_id) REFERENCES autopark.enterprise(id) ON DELETE SET NULL;


--
-- Name: driver_vehicle driver_vehicle_driver_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver_vehicle
    ADD CONSTRAINT driver_vehicle_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES autopark.driver(id) ON DELETE CASCADE;


--
-- Name: driver_vehicle driver_vehicle_vehicle_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver_vehicle
    ADD CONSTRAINT driver_vehicle_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES autopark.vehicle(id) ON DELETE CASCADE;


--
-- Name: enterprise_manager enterprise_manager_enterprise_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.enterprise_manager
    ADD CONSTRAINT enterprise_manager_enterprise_id_fkey FOREIGN KEY (enterprise_id) REFERENCES autopark.enterprise(id) ON DELETE SET NULL;


--
-- Name: enterprise_manager enterprise_manager_manager_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.enterprise_manager
    ADD CONSTRAINT enterprise_manager_manager_id_fkey FOREIGN KEY (manager_id) REFERENCES autopark.manager(id) ON DELETE SET NULL;


--
-- Name: driver fk195d617cym46kf8w49xpkjylt; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.driver
    ADD CONSTRAINT fk195d617cym46kf8w49xpkjylt FOREIGN KEY (active_vehicle_id) REFERENCES autopark.vehicle(id);


--
-- Name: vehicle fk_brand; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT fk_brand FOREIGN KEY (brand_id) REFERENCES autopark.brand(id) ON DELETE SET NULL;


--
-- Name: vehicle fk_enterprise; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT fk_enterprise FOREIGN KEY (enterprise_id) REFERENCES autopark.enterprise(id) ON DELETE SET NULL;


--
-- Name: vehicle fkdwmf4v82osaeeae2ytjs061ol; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT fkdwmf4v82osaeeae2ytjs061ol FOREIGN KEY (active_vehicle) REFERENCES autopark.driver(id);


--
-- Name: gps_data gps_data_vehicle_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.gps_data
    ADD CONSTRAINT gps_data_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES autopark.vehicle(id) ON DELETE SET NULL;


--
-- Name: trip trip_end_gps_data_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.trip
    ADD CONSTRAINT trip_end_gps_data_id_fkey FOREIGN KEY (end_gps_data_id) REFERENCES autopark.gps_data(id);


--
-- Name: trip trip_start_gps_data_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.trip
    ADD CONSTRAINT trip_start_gps_data_id_fkey FOREIGN KEY (start_gps_data_id) REFERENCES autopark.gps_data(id);


--
-- Name: trip trip_vehicle_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.trip
    ADD CONSTRAINT trip_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES autopark.vehicle(id);


--
-- Name: vehicle vehicle_active_driver_id_fkey; Type: FK CONSTRAINT; Schema: autopark; Owner: fisher48
--

ALTER TABLE ONLY autopark.vehicle
    ADD CONSTRAINT vehicle_active_driver_id_fkey FOREIGN KEY (active_driver_id) REFERENCES autopark.driver(id);


--
-- PostgreSQL database dump complete
--

